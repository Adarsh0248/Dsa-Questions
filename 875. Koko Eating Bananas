//https://leetcode.com/problems/koko-eating-bananas/
class Solution {
    public long noOfHours(int [] piles,int nums){
        long ans = 0;
        for (int i=0;i<piles.length;i++){
            if(piles[i]%nums==0){
                ans+= piles[i]/nums;
            }else ans+= piles[i]/nums+1;

        }
        return ans;
    }
    public int minEatingSpeed(int[] piles, int h) {
        Arrays.sort(piles);
        if(piles.length==h) return piles[piles.length-1];
        if(piles.length==1){
            if(piles[0]>h){
                if(piles[0]%h==0){
                return piles[0]/h;
            }else return piles[0]/h+1;
            } 
            else return 1;
        } 
        int left = 1;
        int right = piles[piles.length-1];
        int mid =0;
        
        while(left<= right){
            mid = left+(right-left)/2;
            long n =noOfHours(piles,mid); 
            if(n==h) right=mid-1;
                
            else if(n<h) right= mid-1;
            else left = mid+1;
        }
        return left;
       
    }
}
