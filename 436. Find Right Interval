//https://leetcode.com/problems/find-right-interval/
class Solution {
    public int binarySearch(int [][] arr,int s,int e,int target){
        int ans = -1;
        int mid = 0;
        while(s<=e){
            mid = s+(e-s)/2;
            if(arr[mid][0]>= target){
                ans = arr[mid][2];
                e = mid -1;
            }
            else s = mid+1;
        }
        return ans;

    }
    public int[] findRightInterval(int[][] intervals) {
        int [] ans = new int [intervals.length];
        int [][] arr = new int[intervals.length][3];
        for(int i =0;i<intervals.length;i++){
            arr[i][0]=intervals[i][0];
            arr[i][1]=intervals[i][1];
            arr[i][2]=i;
        }
            Arrays.sort(arr,(a,b)->a[0]-b[0]);
            for(int i  =0;i<intervals.length;i++){
                ans[arr[i][2]]=binarySearch( arr,i,intervals.length-1,arr[i][1]);
            }
            return ans;
        
        

       
    }
}
